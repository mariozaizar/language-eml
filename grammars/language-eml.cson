# CoffeeScript Object Notation (CSON)
{
  'scopeName': 'text.eml.basic'
  'name': 'Email (EML)'
  'fileTypes': ['eml', 'msg', 'mbx', 'mbox']
  'patterns': [
    # Email addresses
    {
      'match': '(\S|<)"[a-zA-Z0-9. \+\_\-]+"\s*&lt;[a-zA-Z0-9.\-]+\@[a-zA-Z0-9.\-]+&gt;(\S|>)',
      'name': 'variable.other.eml'
    },
    {
      'match': '(\S|<)[a-zZ-Z0-9.\+\_\-]*\s*&lt;[a-zA-Z0-9.\-]+\@[a-zA-Z0-9.\-]+&gt;(\S|>)',
      'name': 'variable.other.eml'
    },
    {
      'match': '(|<)[a-zA-Z0-9.\+\_\-]+\@[a-zA-Z0-9.\-]+(>|)',
      'name': 'variable.other.eml'
    },

    # "Email From" Headers
    {
      'match': '^(?i)(envelope-from|return-path|mail-from|from):',
      'name': 'constant.language.header'
    },

    # Required headers
    {
      'match': '^(?i)(from|date|to|subject|cc|content-type|precedence|message-id|in-reply-to|references|reply-to|sender|archived-at|x-cmae-virus|\d*zendesk\d*):',
      'name': 'constant.language.header'
    },

    # Headers
    {
      'match': '^[A-Z][a-zA-Z0-9-]*:',
      'name': 'constant.language.eml'
    },

    # Resent Headers
    {
      'match': '^.*(?i)resent-.*?:',
      'name': 'constant.other.eml'
    },

    # X-Headers
    {
      'match': '^(?i)x-.*?:',
      'name': 'constant.other.eml'
    },

    # Specials
    {
      'match': '(?i)base64',
      'name': 'variable.eml'
    },
    {
      'match': '(?i)multipart\/.*:',
      'name': 'variable.eml'
    },
    {
      'match': '(?i)image\/.*;',
      'name': 'variable.eml'
    },
    {
      'match': '(?i)text\/.*;',
      'name': 'variable.eml'
    },
    {
      'match': 'boundary=.*',
      'name': 'keyword.control.eml'
    },
    {
      'match': '^--(?!>).*',
      'name': 'keyword.control.eml'
    },

    # UUID
    {
      'match': "(?x)([0-9a-fA-F]{32}|[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})",
      'name': 'constant.other.eml'
    },

    # Content-Transfer-Encoding: base64
    {
      'match': '^(?:[A-Za-z0-9+/]{4})+(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$',
      'name': 'text.eml.encoded'
    },

    # Content-Type: text/html;
    {
      'match': '^(?i)<html>(.|\s)*<\/html>$',
      'include': 'text.html.basic'
    },

    # Quoted Text
    {
      'match': '^[|>].*',
      'name': 'comment.line.eml'
    },

    # IPv4
    {
      'match': "(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)",
      'name': 'variable.other.eml'
    },

    # IPv6
    {
      'match': "(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))",
      'name': 'variable.other.eml'
    }
  ]
}
